---
name: build

on:
  push:
    paths-ignore:
      - '**.md'
  pull_request:
    paths-ignore:
      - '**.md'

jobs:
  linux:
    runs-on: ubuntu-latest
    continue-on-error: ${{ ! matrix.stable }}
    strategy:
      matrix:
        compiler:
          - gcc
          - clang
        os:
          - fedora:latest
          - quay.io/centos/centos:stream9
          - quay.io/centos/centos:stream10-development
          - debian:testing
          - debian:latest
          - ubuntu:rolling
          - ubuntu:jammy
          - ubuntu:focal
        stable: [true]
        include:
          - compiler: gcc
            os: quay.io/fedora/fedora:rawhide
            stable: false
          - compiler: clang
            os: quay.io/fedora/fedora:rawhide
            stable: false
          - compiler: gcc
            os: ubuntu:devel
            stable: false
          - compiler: clang
            os: ubuntu:devel
            stable: false
    steps:
      - uses: actions/checkout@v4

      - name: Show OS information
        run: |
          cat /etc/os-release 2>/dev/null || echo /etc/os-release not available

      - name: Install build dependencies
        run: bash .github/workflows/install-dependencies

      - name: Build jose
        run: |
          mkdir -p build && cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release || cat CMakeFiles/CMakeError.log >&2
          make

      - name: Run tests
        run: |
          cd build
          ctest --output-on-failure

      - name: Show package config
        run: |
          if [ -r build/jose.pc ]; then
            cat build/jose.pc
          else
            echo "No pkg-config file available" >&2
          fi

    container:
      image: ${{matrix.os}}
      env:
        DISTRO: ${{matrix.os}}
        CC: ${{ matrix.compiler }}

  osx:
    runs-on: macos-latest
    strategy:
      matrix:
        compiler:
          - gcc
          - clang
    steps:
      - uses: actions/checkout@v4

      - name: Show OS information
        run: |
          cat /etc/os-release 2>/dev/null || echo /etc/os-release not available

      - name: Install build dependencies
        run: bash .github/workflows/install-dependencies

      - name: Build jose
        run: |
          mkdir -p build && cd build
          CFLAGS="-I$(brew --prefix openssl)/include" LDFLAGS="-L$(brew --prefix openssl)/lib" PKG_CONFIG_PATH="$(brew --prefix openssl)/lib/pkgconfig" cmake .. -DCMAKE_BUILD_TYPE=Release || cat CMakeFiles/CMakeError.log >&2
          make

      - name: Run tests
        run: |
          cd build
          ctest --output-on-failure

      - name: Show package config
        run: |
          if [ -r build/jose.pc ]; then
            cat build/jose.pc
          else
            echo "No pkg-config file available" >&2
          fi

    env:
      DISTRO: osx:macos-latest
      CC: ${{ matrix.compiler }}

# vim:set ts=2 sw=2 et:
